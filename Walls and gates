Gate: 0 , Wall : -1 , Room : INF
DFS

public class Solution{
	public void solution(int[][] nums){
		for(int i=0;i<nums.length;i++)
		{
			for(int j=0;j<nums[i].length;j++){
				if(nums[i][j] == 0)	// If it is a gate
					dfs(nums,0,i,j);
			}
		}
	}
	public void dfs(int[][] nums,int count, int i,int j){
    if(i<0 || i>nums.length || j<0 || j<nums[i].length || nums[i][j]<count)
      return ;
    nums[i][j] = count;
    dfs(nums , count+1,i+1,j);
    dfs(nums , count+1,i-1,j);
    dfs(nums , count+1,i,j+1j);
    dfs(nums , count+1,i,j-1);
  }
}

