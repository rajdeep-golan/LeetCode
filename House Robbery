class Rob {
    public int solution(int[] nums) {
        if(nums.length==0 || nums==null)   
            return 0;
        if(nums.length==1)
            return nums[0];
        if(nums.length==2)
            return Math.max(nums[0],nums[1]);
        //We use dynamic Programming , where dp[i] denotes the maximum amount of money robbed till ith house.
        //for 1 house , we choose it , for 2 houses , we choose the maximum of 2 , for 3 houses , we choose maximum of either 1st and 3rd or the 2nd
        int dp[]=new int[nums.length];
        dp[0]=nums[0];
        dp[1]=Math.max(nums[0],nums[1]);
        for(int i=2;i<nums.length;i++)
            dp[i]=Math.max(dp[i-2]+nums[i],dp[i-1]);
        return dp[nums.length-1];
    }
}
