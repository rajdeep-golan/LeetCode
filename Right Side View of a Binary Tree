/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
    
    //We do a level order traversal with right node being traversed first
        List<Integer> res=new ArrayList();
        Queue<TreeNode> q=new LinkedList();
        if(root==null)  return res;
        q.offer(root);
        
        
        while(!q.isEmpty()){
            int size=q.size();
            for(int i=0;i<size;i++){
                TreeNode node=q.poll();
                if(i==0)   //i.e. only for 1st time , when we have the rightmost node in a level , we add that node to our answer
                   res.add(node.val);
                if(node.right!=null)    q.offer(node.right);
                if(node.left!=null)     q.offer(node.left);
            }
        }
        return res;
    }
}
