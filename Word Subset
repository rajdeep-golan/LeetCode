public class WordSubset{
  public List<Integer> solution(String[] A,String[] B){
    //We will solve it in O(A+B) rather than O(A*B)
    
    List<Integer> res=new ArrayList();
    
    int[] max_freq=new int[26];
    
    for(int i=0;i<B.length;i++)
     {
      String cur=B[i];
      int[] char_freq=getFreq(cur);
      
      //We have to select the maximum frequency of each letter in the Strings B
      for(int j=0;j<26;j++)
        max_freq=Math.max(max_freq[j],char_freq[j]);
      }
      
     for(int i=0;i<A.length;i++){
        String cur=A[i];
        int[] count_freq=getFreq(cur);
        
        boolean valid=true;
        for(int j=0;j<26;j++)
        {
          if(max_freq[j] > count_freq[j])
          {
            valid=false;
            break;
          }
          if(valid)
            res.add(cur);

        }
        return res;
      }
      
      public int[] getFreq(String s){
        int[] freq=new int[26];
        for(char c: s.toCharArray())
          freq[c-'a']++;
          
        return freq;
      }
      
    }
