public class Permutations{
  public List<List<Integer>> solution(int[] nums){
    List<List<Integer>> res=new ArrayList<>();
    dfs(nums,res,0);  //level=0 initially
    return res;
  }
  
  public void dfs(int[] nums,List<List<Integer>> res,int level){
    
    if(level==nums.length)
      {
        List<Integer> row=new ArrayList<>();
        for(int a:nums)
          row.add(a);
        res.add(row);
        return;
      }
     for(int i=level;i<nums.length;i++)
     {
        swap(nums,i,level); //Swap
        dfs(nums,res,level+1);
        swap(nums,i,level); //Reset
      }
    }
    
    public void swap(int[] nums,int i,int j){
      if(i==j)
        return;
      int temp=nums[i];
      nums[i]=nums[j];
      nums[j]=temp;
    }
  }
        
