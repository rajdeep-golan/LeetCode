/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList();
        findPath(root,targetSum,new ArrayList<Integer>(),result);
        return result;
    }
    void findPath(TreeNode root,int sum,List<Integer> current,List<List<Integer>>result){
        if(root == null)  //Base case
            return;
        
        current.add(root.val);
        if(root.val == sum && root.left == null && root.right == null){ //Leaf node and remaining sum = node value
            result.add(current);
            return;
        }
        findPath(root.left,sum-root.val,new ArrayList<Integer>(current),result);
        findPath(root.right,sum-root.val,new ArrayList<Integer>(current),result);
    }
    }
